<Project Sdk="Microsoft.NET.Sdk.Web">

    <PropertyGroup>
        <TargetFramework>net6.0</TargetFramework>
        <Nullable>enable</Nullable>
        <IsPackable>true</IsPackable>
        <SpaRoot>..\dovecord-react\</SpaRoot>
        <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>
        <ImplicitUsings>enable</ImplicitUsings>
        <DockerDefaultTargetOS>Linux</DockerDefaultTargetOS>

        <!-- Set this to true if you enable server-side prerendering 
        <BuildServerSideRenderer>false</BuildServerSideRenderer>
        <DockerfileContext>..\..</DockerfileContext>
        <DockerComposeProjectPath>..\..\docker-compose.dcproj</DockerComposeProjectPath> -->
      <UserSecretsId>01e8f67f-b700-4431-9bbb-b6139244f775</UserSecretsId>
  </PropertyGroup>

    <ItemGroup>
        <PackageReference Include="AutoBogus" Version="2.13.1" />
        <PackageReference Include="Autofac.Extensions.DependencyInjection" Version="7.2.0" />
        <PackageReference Include="AutoMapper" Version="11.0.1" />
        <PackageReference Include="AutoMapper.Extensions.Microsoft.DependencyInjection" Version="11.0.0" />
        <PackageReference Include="Bogus" Version="34.0.2" />
        <PackageReference Include="EFCore.NamingConventions" Version="6.0.0" />
        <PackageReference Include="FluentValidation.AspNetCore" Version="10.4.0" />
        <PackageReference Include="FluentValidation.DependencyInjectionExtensions" Version="10.4.0" />
        <PackageReference Include="MediatR" Version="10.0.1" />
        <PackageReference Include="MediatR.Extensions.Microsoft.DependencyInjection" Version="10.0.1" />
        <PackageReference Include="Microsoft.AspNetCore.Mvc.NewtonsoftJson" Version="6.0.4" />
        <PackageReference Include="Microsoft.AspNetCore.Mvc.Versioning" Version="5.0.0" />
        <PackageReference Include="Microsoft.AspNetCore.Mvc.Versioning.ApiExplorer" Version="5.0.0" />
        <PackageReference Include="Microsoft.AspNetCore.SignalR" Version="1.1.0" />
        <PackageReference Include="Microsoft.AspNetCore.SignalR.Protocols.MessagePack" Version="6.0.4" />
        <PackageReference Include="Microsoft.AspNetCore.SpaProxy" Version="6.0.4" />
        <PackageReference Include="Microsoft.AspNetCore.SpaServices" Version="3.1.24" />
        <PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="6.0.4" />
        <PackageReference Include="Microsoft.EntityFrameworkCore" Version="6.0.4" />
        <PackageReference Include="Microsoft.EntityFrameworkCore.Design" Version="6.0.4">
            <PrivateAssets>all</PrivateAssets>
            <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
        </PackageReference>
        <PackageReference Include="Microsoft.EntityFrameworkCore.InMemory" Version="6.0.4" />
        <PackageReference Include="Microsoft.EntityFrameworkCore.Sqlite" Version="6.0.4" />
        <PackageReference Include="Microsoft.EntityFrameworkCore.Sqlite.Design" Version="1.1.6" />
        <PackageReference Include="Microsoft.EntityFrameworkCore.Tools.DotNet" Version="2.0.3" />
        <PackageReference Include="Microsoft.Extensions.Configuration" Version="6.0.1" />
        <PackageReference Include="Microsoft.Extensions.Configuration.FileExtensions" Version="6.0.0" />
        <PackageReference Include="Microsoft.Extensions.Configuration.Json" Version="6.0.0" />
        <PackageReference Include="Microsoft.Extensions.DependencyInjection" Version="6.0.0" />
        <PackageReference Include="Microsoft.Extensions.Hosting" Version="6.0.1" />
        <PackageReference Include="Microsoft.Extensions.Logging.Abstractions" Version="6.0.1" />
        <PackageReference Include="Microsoft.Extensions.Logging.Console" Version="6.0.0" />
        <PackageReference Include="Microsoft.Identity.Web" Version="1.24.0" />
        <PackageReference Include="Microsoft.Orleans.Core" Version="3.6.2" />
        <PackageReference Include="Microsoft.Orleans.Runtime.Abstractions" Version="3.6.2" />
        <PackageReference Include="Newtonsoft.Json" Version="13.0.1" />
        <PackageReference Include="Npgsql" Version="6.0.4" />
        <PackageReference Include="Npgsql.EntityFrameworkCore.PostgreSQL" Version="6.0.4" />
        <PackageReference Include="NSwag.AspNetCore" Version="13.15.10" />
        <PackageReference Include="NSwag.MSBuild" Version="13.15.10">
            <PrivateAssets>all</PrivateAssets>
            <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
        </PackageReference>
        <PackageReference Include="OrleansDashboard" Version="3.6.2" />
        <PackageReference Include="Serilog.AspNetCore" Version="5.0.0" />
        <PackageReference Include="Serilog.Enrichers.AspNetCore" Version="1.0.0" />
        <PackageReference Include="Serilog.Enrichers.Context" Version="4.2.0" />
        <PackageReference Include="Serilog.Enrichers.Process" Version="2.0.2" />
        <PackageReference Include="Serilog.Enrichers.Thread" Version="3.1.0" />
        <PackageReference Include="Serilog.Exceptions" Version="8.1.0" />
        <PackageReference Include="Serilog.Settings.Configuration" Version="3.3.0" />
        <PackageReference Include="Serilog.Sinks.Console" Version="4.0.1" />
        <PackageReference Include="Serilog.Sinks.Seq" Version="5.1.1" />
    </ItemGroup>

    <ItemGroup>
        <!-- Don't publish the SPA source files, but do show them in the project files list -->
        <Content Remove="$(SpaRoot)**" />
        <None Remove="$(SpaRoot)**" />
        <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
        <Content Update="appsettings.json">
            <CopyToOutputDirectory>Always</CopyToOutputDirectory>
        </Content>
    </ItemGroup>

    <ItemGroup>
      <Folder Include="Controllers\v1" />
      <Folder Include="Orleans" />
    </ItemGroup>

    <ItemGroup>
      <Orleans_CodeGenInputs Remove="Domain\Users\Dto\UserCreationDto.cs" />
      <Orleans_CodeGenInputs Remove="Domain\Users\Dto\UserDto.cs" />
      <Orleans_CodeGenInputs Remove="Domain\Users\Dto\UserManipulationDto.cs" />
      <Orleans_CodeGenInputs Remove="Domain\Users\Dto\UserSettingsManipulationDto.cs" />
      <Orleans_CodeGenInputs Remove="Domain\Channels\Dto\ChannelDto.cs" />
      <Orleans_CodeGenInputs Remove="Domain\Channels\Dto\ChannelManipulationDto.cs" />
    </ItemGroup>

    <ItemGroup>
      <ProjectReference Include="..\Dovecord.Domain\Dovecord.Domain.csproj" />
      <ProjectReference Include="..\Dovecord.Orleans.Interfaces\Dovecord.Orleans.Interfaces.csproj" />
    </ItemGroup>
    <!-- 
  <Target Name="NSwag" AfterTargets="PostBuildEvent" Condition=" '$(Configuration)' == 'Debug' ">
    <Message Importance="High" Text="$(NSwagExe_Net60) run nswag.json /variables:Configuration=$(Configuration)" />
    <Exec WorkingDirectory="$(ProjectDir)" EnvironmentVariables="ASPNETCORE_ENVIRONMENT=Development" Command="$(NSwagExe_Net60) run nswag.json /variables:Configuration=$(Configuration)" />
    <Delete Files="$(ProjectDir)\obj\$(MSBuildProjectFile).NSwag.targets" />
  </Target>
  -->
    <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
        <!-- Ensure Node.js is installed -->
        <Exec Command="node --version" ContinueOnError="true">
            <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
        </Exec>
        <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
        <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
        <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
    </Target>

    <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
        <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
        <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
        <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build -- --prod" />
        <!-- <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build:ssr - - - -prod" Condition=" '$(BuildServerSideRenderer)' == 'true' " /> -->
        <!-- Include the newly-built files in the publish output -->
        <ItemGroup>
            <DistFiles Include="$(SpaRoot)build\**" />
            <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
                <RelativePath>wwwroot\%(RecursiveDir)%(FileName)%(Extension)</RelativePath>
                <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
                <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
            </ResolvedFileToPublish>
        </ItemGroup>
    </Target>
</Project>